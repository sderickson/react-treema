(self.webpackChunkreact_treema=self.webpackChunkreact_treema||[]).push([[831],{"./src/Treema/tests/tab-key.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{TabHiddenAndClosedRow:()=>TabHiddenAndClosedRow,default:()=>tab_key_story});var TreemaRoot=__webpack_require__("./src/Treema/TreemaRoot.tsx"),context=__webpack_require__("./src/Treema/tests/context.ts");const tabHiddenAndClosedRowTest={name:"edits the selected row, if editable",test:async ctx=>{await ctx.fireFocus(),await ctx.fireTab(),await ctx.fireTab(),ctx.expect(ctx.getLastPath()).toBe("/name"),await ctx.fireTab(),ctx.expect(ctx.getLastPath()).toBe("/numbers"),await ctx.fireTab(),ctx.expect(ctx.getLastPath()).toBe("/address")}},args={schemaLib:__webpack_require__("./src/Treema/utils.ts").noopLib,onEvent:context.Vl,initOpen:1,data:{id:"xyzzy",name:"Bob",numbers:["401-401-1337"],address:"Mars"},schema:{type:"object",displayProperty:"name",properties:{id:{type:"string",format:"hidden"},name:{type:"string",title:"NAME"},numbers:{type:"array",items:{type:"string"}},address:{type:"string"}}}};var utils_storybook=__webpack_require__("./src/Treema/tests/utils-storybook.ts");const tab_key_story={title:"InteractiveTests/TabKey",component:TreemaRoot.W,parameters:{docs:{description:{component:"This storybook demonstrates and tests enter key behaviors."}}}},TabHiddenAndClosedRow=(0,utils_storybook.x)(tabHiddenAndClosedRowTest,args);TabHiddenAndClosedRow.parameters={...TabHiddenAndClosedRow.parameters,docs:{...TabHiddenAndClosedRow.parameters?.docs,source:{originalSource:"wrapGenericTestInStory(tabHiddenAndClosedRowTest, args)",...TabHiddenAndClosedRow.parameters?.docs?.source}}}},"./src/Treema/tests/context.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Vl:()=>onEvent,_v:()=>sleep,g6:()=>TreemaStorybookTestContext});const user=__webpack_require__("./node_modules/@testing-library/user-event/dist/esm/index.js").Z.setup();function sleep(ms){return new Promise((resolve=>setTimeout(resolve,ms)))}let lastPath,lastData;const onEvent=event=>{"change_select_event"===event.type&&(lastPath=event.path),"change_data_event"===event.type&&(lastData=event.data)};class TreemaStorybookTestContext{constructor(root,jest,testingLibrary,speed=200){this.root=void 0,this.treema=void 0,this.testingLibrary=void 0,this.expect=void 0,this.speed=void 0,this.root=root,"treema-root"===this.root.getAttribute("data-testid")?this.treema=this.root:this.treema=testingLibrary.within(this.root).getByTestId("treema-root"),this.testingLibrary=testingLibrary,this.expect=jest.expect,this.speed=speed}query(){return this.testingLibrary.within(this.root)}async fireFocus(e){await this.testingLibrary.fireEvent.focus(e||this.treema),await sleep(this.speed)}async fireArrowDown(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"ArrowDown",code:"ArrowDown"}),await sleep(this.speed)}async fireArrowUp(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"ArrowUp",code:"ArrowUp"}),await sleep(this.speed)}async fireArrowLeft(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"ArrowLeft",code:"ArrowLeft"}),await sleep(this.speed)}async fireArrowRight(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"ArrowRight",code:"ArrowRight"}),await sleep(this.speed)}async fireEnter(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"Enter",code:"Enter"}),await sleep(this.speed)}async fireTab(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"Tab",code:"Tab"}),await sleep(this.speed)}async fireBackspace(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"Backspace",code:"Backspace"}),await sleep(this.speed)}async fireMouseClick(e){await this.testingLibrary.fireEvent.click(e),await sleep(this.speed)}async keyboard(input){await user.keyboard(input),await sleep(this.speed)}async type(element,text){await user.type(element,text),await sleep(this.speed)}async clear(){await user.clear(this.testingLibrary.within(this.treema).getByRole("textbox"))}async selectOptions(select,values){await user.selectOptions(select,values),await sleep(this.speed)}getLastPath(){return lastPath}getData(){return lastData}}},"./src/Treema/tests/utils-storybook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{x:()=>wrapGenericTestInStory});var _context__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/Treema/tests/context.ts"),_storybook_jest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/testing-library/dist/esm/index.js");const wrapGenericTestInStory=(test,args)=>({name:test.name,args,play:async({canvasElement})=>{const context=new _context__WEBPACK_IMPORTED_MODULE_0__.g6(canvasElement,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__);await(0,_context__WEBPACK_IMPORTED_MODULE_0__._v)(100),await test.test(context)}})},"?4f7e":()=>{}}]);