(self.webpackChunkreact_treema=self.webpackChunkreact_treema||[]).push([[127],{"./src/Treema/tests/core-types.story.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ArrayType:()=>ArrayType,BooleanType:()=>BooleanType,NullType:()=>NullType,NumberType:()=>NumberType,ObjectType:()=>ObjectType,StringType:()=>StringType,default:()=>core_types_story});var TreemaRoot=__webpack_require__("./src/Treema/TreemaRoot.tsx");var utils_storybook=__webpack_require__("./src/Treema/tests/utils-storybook.ts");const core_types_story={title:"RenderTests/CoreTypes",component:TreemaRoot.W,parameters:{docs:{description:{component:"This storybook demonstrates and tests enter key behaviors."}}}},StringType=(0,utils_storybook.x)({name:"should render strings",test:async ctx=>{ctx.query().getByText("testasdf")}},{data:{string:"testasdf"},schema:{type:"object",properties:{string:{type:"string"}}}}),NullType=(0,utils_storybook.x)({name:"should render nulls",test:async ctx=>{ctx.query().getByText("null")}},{data:{null:null},schema:{type:"object",properties:{null:{type:"null"}}}}),NumberType=(0,utils_storybook.x)({name:"should render numbers",test:async ctx=>{ctx.query().getByText("123")}},{data:{number:123},schema:{type:"object",properties:{number:{type:"number"}}}}),BooleanType=(0,utils_storybook.x)({name:"should render booleans",test:async ctx=>{ctx.query().getByText("true")}},{data:{boolean:!0},schema:{type:"object",properties:{boolean:{type:"boolean"}}}}),ArrayType=(0,utils_storybook.x)({name:"should render arrays",test:async ctx=>{ctx.expect(ctx.query().getAllByText("234").length).toBe(2)}},{data:{array:[1,234,3]},schema:{type:"object",properties:{array:{type:"array",items:{type:"number"}}}}}),ObjectType=(0,utils_storybook.x)({name:"should render objects",test:async ctx=>{ctx.query().getByText("234")}},{data:{a:1,b:234},schema:{type:"object",properties:{a:{type:"number"},b:{type:"number"}}}});StringType.parameters={...StringType.parameters,docs:{...StringType.parameters?.docs,source:{originalSource:"wrapGenericTestInStory(renderStringTest, renderStringArgs)",...StringType.parameters?.docs?.source}}},NullType.parameters={...NullType.parameters,docs:{...NullType.parameters?.docs,source:{originalSource:"wrapGenericTestInStory(renderNullTest, renderNullArgs)",...NullType.parameters?.docs?.source}}},NumberType.parameters={...NumberType.parameters,docs:{...NumberType.parameters?.docs,source:{originalSource:"wrapGenericTestInStory(renderNumberTest, renderNumberArgs)",...NumberType.parameters?.docs?.source}}},BooleanType.parameters={...BooleanType.parameters,docs:{...BooleanType.parameters?.docs,source:{originalSource:"wrapGenericTestInStory(renderBooleanTest, renderBooleanArgs)",...BooleanType.parameters?.docs?.source}}},ArrayType.parameters={...ArrayType.parameters,docs:{...ArrayType.parameters?.docs,source:{originalSource:"wrapGenericTestInStory(renderArrayTest, renderArrayArgs)",...ArrayType.parameters?.docs?.source}}},ObjectType.parameters={...ObjectType.parameters,docs:{...ObjectType.parameters?.docs,source:{originalSource:"wrapGenericTestInStory(renderObjectTest, renderObjectArgs)",...ObjectType.parameters?.docs?.source}}}},"./src/Treema/tests/context.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{Vl:()=>onEvent,_v:()=>sleep,g6:()=>TreemaStorybookTestContext});const user=__webpack_require__("./node_modules/@testing-library/user-event/dist/esm/index.js").Z.setup();function sleep(ms){return new Promise((resolve=>setTimeout(resolve,ms)))}let lastPath,lastData;const onEvent=event=>{"change_select_event"===event.type&&(lastPath=event.path),"change_data_event"===event.type&&(lastData=event.data)};class TreemaStorybookTestContext{constructor(root,jest,testingLibrary,speed=200){this.root=void 0,this.treema=void 0,this.testingLibrary=void 0,this.expect=void 0,this.speed=void 0,this.root=root,"treema-root"===this.root.getAttribute("data-testid")?this.treema=this.root:this.treema=testingLibrary.within(this.root).getByTestId("treema-root"),this.testingLibrary=testingLibrary,this.expect=jest.expect,this.speed=speed}query(){return this.testingLibrary.within(this.root)}async fireFocus(){await this.testingLibrary.fireEvent.focus(this.treema),await sleep(this.speed)}async fireArrowDown(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"ArrowDown",code:"ArrowDown"}),await sleep(this.speed)}async fireArrowUp(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"ArrowUp",code:"ArrowUp"}),await sleep(this.speed)}async fireArrowLeft(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"ArrowLeft",code:"ArrowLeft"}),await sleep(this.speed)}async fireArrowRight(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"ArrowRight",code:"ArrowRight"}),await sleep(this.speed)}async fireEnter(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"Enter",code:"Enter"}),await sleep(this.speed)}async fireTab(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"Tab",code:"Tab"}),await sleep(this.speed)}async fireBackspace(){await this.testingLibrary.fireEvent.keyDown(this.treema,{key:"Backspace",code:"Backspace"}),await sleep(this.speed)}async type(input){await user.keyboard(input),await sleep(this.speed)}async clear(){await user.clear(this.testingLibrary.within(this.treema).getByRole("textbox"))}async selectOptions(select,values){await user.selectOptions(select,values),await sleep(this.speed)}getLastPath(){return lastPath}getData(){return lastData}}},"./src/Treema/tests/utils-storybook.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{x:()=>wrapGenericTestInStory});var _context__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/Treema/tests/context.ts"),_storybook_jest__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/@storybook/jest/dist/esm/index.js"),_storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/@storybook/testing-library/dist/esm/index.js");const wrapGenericTestInStory=(test,args)=>({name:test.name,args,play:async({canvasElement})=>{const context=new _context__WEBPACK_IMPORTED_MODULE_0__.g6(canvasElement,_storybook_jest__WEBPACK_IMPORTED_MODULE_1__,_storybook_testing_library__WEBPACK_IMPORTED_MODULE_2__);await(0,_context__WEBPACK_IMPORTED_MODULE_0__._v)(100),await test.test(context)}})},"?4f7e":()=>{}}]);